name: Deploy Static Website

on:
  workflow_dispatch:
    inputs:
      domain_name:
        description: 'Domain name for the website (e.g., example.com)'
        required: false
        default: 'greateightgoals.com'
        type: string
      hosted_zone_id:
        description: 'Route 53 Hosted Zone ID for the domain (optional, will be auto-detected if not provided)'
        required: false
        type: string
      stack_name:
        description: 'CloudFormation stack name'
        required: false
        default: 'static-website'
        type: string
      region:
        description: 'AWS region'
        required: false
        default: 'us-east-1'
        type: string
      skip_content_upload:
        description: 'Skip uploading content to S3 bucket'
        required: false
        default: false
        type: boolean
      skip_dns_record:
        description: 'Skip creating/updating Route 53 DNS record'
        required: false
        default: false
        type: boolean
      update_dns_record:
        description: 'Update existing Route 53 DNS record'
        required: false
        default: true
        type: boolean
      force_bucket_recreation:
        description: 'Force recreation of the S3 bucket if it already exists'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC authentication
      contents: read    # Required to checkout the repository
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ inputs.region || 'us-east-1' }}
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Deploy static website using deploy.sh
        run: |
          echo "Deploying static website using deploy.sh script..."
          
          # Make the script executable
          chmod +x aws-static-website/scripts/deploy.sh
          
          # Build the command with all parameters
          DEPLOY_CMD="./aws-static-website/scripts/deploy.sh"
          DEPLOY_CMD="$DEPLOY_CMD --domain-name \"${{ inputs.domain_name || 'greateightgoals.com' }}\""
          DEPLOY_CMD="$DEPLOY_CMD --stack-name \"${{ inputs.stack_name || 'static-website' }}\""
          DEPLOY_CMD="$DEPLOY_CMD --region \"${{ inputs.region || 'us-east-1' }}\""
          
          # Add optional parameters
          if [ -n "${{ inputs.hosted_zone_id }}" ]; then
            DEPLOY_CMD="$DEPLOY_CMD --hosted-zone-id \"${{ inputs.hosted_zone_id }}\""
          fi
          
          if [ "${{ inputs.skip_content_upload }}" == "true" ]; then
            DEPLOY_CMD="$DEPLOY_CMD --skip-content-upload"
          fi
          
          if [ "${{ inputs.skip_dns_record }}" == "true" ]; then
            DEPLOY_CMD="$DEPLOY_CMD --skip-dns-record"
          fi
          
          if [ "${{ inputs.update_dns_record }}" == "true" ]; then
            DEPLOY_CMD="$DEPLOY_CMD --update-dns-record"
          fi
          
          if [ "${{ inputs.force_bucket_recreation }}" == "true" ]; then
            DEPLOY_CMD="$DEPLOY_CMD --force-bucket-recreation"
          fi
          
          # Execute the command
          echo "Executing: $DEPLOY_CMD"
          eval "$DEPLOY_CMD"
      
      - name: Get CloudFormation stack outputs
        id: stack-outputs
        run: |
          echo "Getting CloudFormation stack outputs..."
          
          # Get the CloudFront domain name from CloudFormation outputs
          CLOUDFRONT_DOMAIN=$(aws cloudformation describe-stacks \
            --stack-name "${{ inputs.stack_name || 'static-website' }}" \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDomainName'].OutputValue" \
            --output text \
            --region "${{ inputs.region || 'us-east-1' }}")
          
          # Set outputs for use in later steps
          echo "cloudfront_domain=$CLOUDFRONT_DOMAIN" >> $GITHUB_OUTPUT
          
          echo "Stack outputs retrieved successfully:"
          echo "CloudFront Domain: $CLOUDFRONT_DOMAIN"
      
      - name: Deployment summary
        run: |
          echo "=== Static Website Deployment Summary ==="
          echo "Domain: ${{ inputs.domain_name || 'greateightgoals.com' }}"
          echo "CloudFront URL: https://${{ steps.stack-outputs.outputs.cloudfront_domain }}"
          echo "Website URL: https://${{ inputs.domain_name || 'greateightgoals.com' }}/"
          echo "Stack Name: ${{ inputs.stack_name || 'static-website' }}"
          echo "Region: ${{ inputs.region || 'us-east-1' }}"
          echo "==================================="
