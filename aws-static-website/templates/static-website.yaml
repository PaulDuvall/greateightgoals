AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for a secure static website using S3, CloudFront, ACM, and Route 53'

Parameters:
  DomainName:
    Type: String
    Description: The domain name for the website (e.g., example.com)
  
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: The Route 53 Hosted Zone ID for the domain

  CreateDnsRecord:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Whether to create a DNS record in Route 53 (set to false if the record already exists)

Conditions:
  ShouldCreateDnsRecord: !Equals [!Ref CreateDnsRecord, 'true']

Resources:
  # S3 bucket to store website content
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${DomainName}-website'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      Tags:
        - Key: Project
          Value: StaticWebsite
        - Key: Environment
          Value: Production

  # Bucket policy to allow CloudFront access to the bucket
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${WebsiteBucket}/*'
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${WebsiteDistribution}'

  # ACM Certificate for HTTPS
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub 'www.${DomainName}'
      ValidationMethod: DNS
      Tags:
        - Key: Project
          Value: StaticWebsite
        - Key: Environment
          Value: Production

  # CloudFront Origin Access Control
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${DomainName}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront distribution
  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !Ref DomainName
          - !Sub 'www.${DomainName}'
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized policy
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # CORS-S3Origin policy
          ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03  # SecurityHeadersPolicy
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
            S3OriginConfig:
              OriginAccessIdentity: ''
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
      Tags:
        - Key: Project
          Value: StaticWebsite
        - Key: Environment
          Value: Production

  # Route 53 record to point to CloudFront
  WebsiteDNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: ShouldCreateDnsRecord
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # This is the global CloudFront hosted zone ID used for all CloudFront distributions
        EvaluateTargetHealth: false
  
  # Route 53 AAAA record for apex domain (IPv6)
  WebsiteIPv6DNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: ShouldCreateDnsRecord
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: AAAA
      AliasTarget:
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # This is the global CloudFront hosted zone ID used for all CloudFront distributions
        EvaluateTargetHealth: false
  
  # Route 53 record for www subdomain
  WwwWebsiteDNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: ShouldCreateDnsRecord
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub 'www.${DomainName}'
      Type: A
      AliasTarget:
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # This is the global CloudFront hosted zone ID used for all CloudFront distributions
        EvaluateTargetHealth: false
  
  # Route 53 AAAA record for www subdomain (IPv6)
  WwwWebsiteIPv6DNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: ShouldCreateDnsRecord
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub 'www.${DomainName}'
      Type: AAAA
      AliasTarget:
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # This is the global CloudFront hosted zone ID used for all CloudFront distributions
        EvaluateTargetHealth: false

Outputs:
  WebsiteBucketName:
    Description: Name of the S3 bucket storing the static website content
    Value: !Ref WebsiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteBucketName'

  CloudFrontDistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref WebsiteDistribution
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDistributionId'

  CloudFrontDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt WebsiteDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDomainName'

  WebsiteURL:
    Description: URL of the website
    Value: !Sub 'https://${DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'
